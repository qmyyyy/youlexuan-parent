<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd">
    <!-- 配置 favicon.ico不进行安全拦截-->
    <http pattern="/favicon.ico" security="none"/>
    <!-- 以下页面不被拦截 -->
    <http pattern="/*.html" security="none"></http>
    <http pattern="/css/**" security="none"></http>
    <http pattern="/img/**" security="none"></http>
    <http pattern="/js/**" security="none"></http>
    <http pattern="/plugins/**" security="none"></http>

    <!--add.do接口：注册，不需要进行拦截-->
    <http pattern="/seller/add.do" security="none"></http>

    <!-- 页面拦截规则 -->
    <http use-expressions="false">
        <intercept-url pattern="/**" access="ROLE_SELLER" />
        <form-login login-page="/shoplogin.html"
                    default-target-url="/admin/index.html"
                    authentication-failure-url="/shoplogin.html"
                    always-use-default-target="true"/>

        <csrf disabled="true"/>

        <headers>
            <frame-options policy="SAMEORIGIN"/>
        </headers>

        <logout/><!--退出-->
    </http>


    <!-- 认证管理器 -->
    <authentication-manager>
        <!--用户信息从自定义的认证类中去读取-->
        <authentication-provider user-service-ref="userDetailService">
            <password-encoder ref="bcryptEncoder"></password-encoder>
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

    <!-- 定义自定义认证类 -->
    <!--<beans:bean id="userDetailService"-->
                <!--class="com.youlexuan.service.UserDetailsServiceImpl">-->
        <!--&lt;!&ndash;注入远程服务对象&ndash;&gt;-->
        <!--<beans:property name="sellerService" ref=""></beans:property>-->
    <!--</beans:bean>-->
    <!--注意：一定要先启动sellerService服务，之前再来启动当前项目-->


    <beans:bean id="userDetailService" class="com.youlexuan.service.UserDetailsServiceImpl">
        <beans:property name="sellerService" ref="sellerService"></beans:property>
    </beans:bean>


    <!--声明远程服务的对象-->
    <!-- 引用dubbo 服务 -->
    <dubbo:application name="youlexuan-shop-web" />
    <dubbo:registry address="zookeeper://192.168.188.128:2181"/>
    <!--通过标签的形式引用服务--> <!-- 和@Reference效果是一样的-->
    <dubbo:reference id="sellerService"  interface="com.offcn.sellergoods.service.SellerService" />



</beans:beans>